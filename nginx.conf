upstream edgeflow {
	ip_hash;
	server 127.0.0.1:12180;
}

server {
    listen    80;
    server_name strategy.objc.com;
    # 引入定义变量指令的文件
    #include /etc/nginx/conf.d/*.variable;

    charset utf-8;

    location / {
	    index index.html;
    }

    #将所有HTTP请求通过rewrite指令重定向到HTTPS。
    return 301 https://$host$request_uri;
}
server {
     #HTTPS的默认访问端口443。
     #如果未在此处配置HTTPS的默认访问端口，可能会造成Nginx无法启动。
     listen 443 ssl;

     #填写证书绑定的域名
     server_name strategy.objc.com;

     charset utf-8;

     #填写证书文件名称
     ssl_certificate cert/strategy.objc.com.pem;
     #填写证书私钥文件名称
     ssl_certificate_key cert/strategy.objc.com.key;

     ssl_session_cache shared:SSL:10m;
     ssl_session_timeout 5m;

     #默认加密套件
     #ssl_ciphers HIGH:!aNULL:!MD5;

     #自定义设置使用的TLS协议的类型以及加密套件（以下为配置示例，请您自行评估是否需要配置）
     #TLS协议版本越高，HTTPS通信的安全性越高，但是相较于低版本TLS协议，高版本TLS协议对浏览器的兼容性较差。
     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
     ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;

     # 表示优先使用服务端加密套件。默认开启
     ssl_prefer_server_ciphers on;
     # 这里默认是4K，改大一点就好
     client_header_buffer_size 16k;

	#    keepalive_timeout 120;
     access_log /var/log/nginx/edgeflow_access.log;
     error_log /var/log/nginx/edgeflow_error.log;

    location / {
        proxy_redirect off;
        proxy_buffering off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		if (!-f $request_filename) {
            proxy_pass http://edgeflow;
           	break;
		}
    }
   error_page   500 502 503 504  /50x.html;
    if ($http_user_agent ~* "360Spider|JikeSpider|Spider|spider|bot|Bot|2345Explorer|curl|wget|webZIP|qihoobot|Baiduspider|Googlebot|Googlebot-Mobile|Googlebot-Image|Mediapartners-Google|Adsbot-Google|Feedfetcher-Google|Yahoo! Slurp|Yahoo! Slurp China|YoudaoBot|Sosospider|Sogou spider|Sogou web spider|MSNBot|ia_archiver|Tomato Bot|NSPlayer|bingbot")
    {
      return 403;
    }

}