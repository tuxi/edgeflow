syntax = "proto3";
package marketdata;

option go_package = "./protobuf;pb";

// --- 服务端推送的最小数据单元 ---

// Ticker 数据 (价格网关使用)
message TickerUpdate {
  string inst_id = 1;      // 币种符号，例如 BTC-USDT
  string last_price = 2;   // 最新成交价格
  string vol_24h = 3;      // 24小时成交量 (单位币)
  string vol_ccy_24h = 4;  // 24小时成交额 (单位计价币)
  string high_24h = 5;     // 24小时最高价
  string low_24h = 6;      // 24小时最低价
  string open_24h = 7;     // 24小时开盘价格
  double change_24h = 8;   // 24小时涨跌幅（%）
  string ask_px = 9;       // 卖一价
  string ask_sz = 10;      // 卖一量
  string bid_px = 11;      // 买一价
  string bid_sz = 12;      // 买一量
  int64 ts = 13;           // 时间戳 (毫秒级)
}

// 批量多个币种的ticker
message TickerBatch {
  repeated TickerUpdate tickers = 1;
}

// K 线数据 (订阅网关使用)
message WsKlineUpdate {
  string inst_id = 1;      // 币种符号
  string time_period = 2;  // K 线周期，例如 "15m"
  bool confirm = 3;        // 是否已收盘

  // 内嵌 K 线详细数据
  message KlineData {
    int64 timestamp = 1; // K线起始时间 (毫秒级)
    string open = 2;
    string close = 3;
    string high = 4;
    string low = 5;
    string vol = 6;     // 成交量 (币为单位)
    string vol_ccy = 7; // 成交额 (计价币为单位)
  }

  KlineData data = 4; // K 线详细数据
}

// 错误信息 (所有网关通用)
message ErrorMessage {
  string action = 1; // "error"
  map<string, string> data = 2; // 通用数据/键值对错误信息
}

// 交易对列表更新 (订阅网关或 Ticker 网关使用)
message InstrumentListUpdate {
  repeated string sorted_inst_ids = 1; // 排序后的 InstID 列表
}

// 币种/交易对元数据更新
message InstrumentUpdate {
  repeated string new_instruments = 1;     // 新上架的 InstID 列表
  repeated string delisted_instruments = 2; // 已下架的 InstID 列表
}

// 币种交易所数据
message CryptoExchange {
  uint32 id = 1;
  string code = 2;
  string name = 3;
  string status = 4;
  string api_endpoint = 5;
  string country = 6;
}

// 排序列好一组货币id
message SortUpdate {
  // 排序类型
  string sort_by = 1;
  // 使用 repeated 关键字表示一个字符串数组/列表
  repeated string sorted_inst_ids = 2;
}

// 加密货币的标签
message CryptoTag {
  uint32 id = 1;
  string name = 2;
  string description = 3;
}

// 交易数据结构体
message CryptoInstrumentTradingItem {
    CryptoInstrumentMetadata instrument_metadata = 1;
    TickerUpdate ticker_update = 2;
}

// 一组带有最新价格的币种信息
message CryptoInstrumentTradingArray {
  repeated CryptoInstrumentTradingItem data = 3;
}

message CryptoInstrumentMetadata {
  uint64 id = 1;
  string instrument_id = 2;
  uint32 exchange_id = 3;
  string base_ccy = 4;
  string quote_ccy = 5;
  string name_cn = 6;
  string name_en = 7;
  string status = 8;
  string price_precision = 9; // 价格精度
  string qty_precision = 10;  // 数量精度
  uint64 market_cap = 11;
  bool is_contract = 12;

  repeated CryptoTag tags = 13;
}


// --- 通用数据体（服务端 -> 客户端）---
// 这是最终通过 WebSocket 发送给客户端的消息体，包含一个 Oneof 字段
message WebSocketMessage {
  // 消息的通用类型，用于客户端快速识别
  string type = 1;

  oneof payload {
    // 批量更新多个币种的ticker 价格数据
    TickerBatch ticker_batch = 2;
    // 更新1个币种的ticker 价格数据
    TickerUpdate ticker = 3;
    // 更新k线数据
    WsKlineUpdate kline_update = 4;
    // 更新已排序的币种列表
    SortUpdate sort_update = 5;
    // 错误消息
    ErrorMessage error_message = 6;
    // 交易对列表更新，数据是排序过的
    InstrumentListUpdate instrument_list = 7;
    // 交易对更新，包括上新和下架
    InstrumentUpdate instrument_status_update = 8;
    // 币种愿数据
    CryptoInstrumentMetadata instrument_metadata = 9;
    // 包含币种和最新价格的交易信息集合
    CryptoInstrumentTradingArray instrument_trading_list = 10;
  }
}